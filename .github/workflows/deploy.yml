name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository (for GitHub Actions workspace)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup SSH agent
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 3: Add GitHub to known hosts
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 4: Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            set -e  # Exit on any error

            echo 'SSH connection established'

            # Update system and install prerequisites
            sudo apt update -y
            sudo apt install -y git curl build-essential

            # Install Node.js LTS (18) if not installed
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt install -y nodejs
            fi

            # Install PM2 globally if not installed
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm install -g pm2
            fi

            # Define deployment folder
            DEPLOY_DIR=~/pipline

            # Clone or pull repo
            if [ ! -d \"$DEPLOY_DIR\" ]; then
                git clone https://github.com/MahnoorKhawaja/pipline $DEPLOY_DIR
            else
                cd $DEPLOY_DIR
                if [ -d \".git\" ]; then
                    git reset --hard
                    git pull origin main
                else
                    rm -rf $DEPLOY_DIR
                    git clone https://github.com/MahnoorKhawaja/pipline $DEPLOY_DIR
                fi
            fi

            cd $DEPLOY_DIR

            # Install npm dependencies
            npm install

            # Ensure uploads folder exists
            mkdir -p uploads

            # Start or restart app with PM2
            pm2 restart server.js || pm2 start server.js --name 'nodejs-app'
            pm2 save

            # Show PM2 status for verification
            pm2 status
          "
